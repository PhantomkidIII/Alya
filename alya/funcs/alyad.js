const _0x31696c = _0x604d;
(function (_0x4bed49, _0x591d15) {
    const _0xc95d2e = _0x604d, _0x3dae0d = _0x4bed49();
    while (!![]) {
        try {
            const _0x54c4dd = parseInt(_0xc95d2e(0x1ea)) / 0x1 * (parseInt(_0xc95d2e(0x1dc)) / 0x2) + -parseInt(_0xc95d2e(0x1d4)) / 0x3 + parseInt(_0xc95d2e(0x1b5)) / 0x4 * (parseInt(_0xc95d2e(0x1d5)) / 0x5) + parseInt(_0xc95d2e(0x1d7)) / 0x6 + -parseInt(_0xc95d2e(0x1cf)) / 0x7 * (-parseInt(_0xc95d2e(0x1d1)) / 0x8) + -parseInt(_0xc95d2e(0x1c7)) / 0x9 + parseInt(_0xc95d2e(0x1bd)) / 0xa;
            if (_0x54c4dd === _0x591d15)
                break;
            else
                _0x3dae0d['push'](_0x3dae0d['shift']());
        } catch (_0x13e3f5) {
            _0x3dae0d['push'](_0x3dae0d['shift']());
        }
    }
}(_0x28d7, 0xd1d76));
import {
    serialize,
    decodeJid
} from '../../star_king/alya.js';
import _0xf0f06d from 'path';
import _0x2bad9d from 'fs/promises';
function _0x604d(_0x39e2fd, _0x1998ad) {
    const _0x28d76a = _0x28d7();
    return _0x604d = function (_0x604d86, _0x5db89a) {
        _0x604d86 = _0x604d86 - 0x1b5;
        let _0x858d17 = _0x28d76a[_0x604d86];
        return _0x858d17;
    }, _0x604d(_0x39e2fd, _0x1998ad);
}
import _0x17c107 from '../../set.cjs';
function _0x28d7() {
    const _0x3ef307 = [
        'groupMetadata',
        'public',
        'then',
        'isGroup',
        'AUTO_READ',
        '138005IOjKPi',
        '@s.whatsapp.net',
        '56iNWWjn',
        'trim',
        'includes',
        '1059537CCCjee',
        '35EUMyxg',
        'notify',
        '4996362osuIPi',
        'recording',
        'from',
        'ALWAYS_ONLINE',
        'length',
        '2oFXBCG',
        'AUTO_READ_STATUS',
        'block',
        'readdir',
        'match',
        'parse',
        'url',
        'status@broadcast',
        'type',
        'toLowerCase',
        'error',
        'messages',
        'cmds',
        'startsWith',
        '374185SsHyHI',
        'remoteJid',
        'Failed\x20to\x20load\x20plugin:\x20',
        'OWNER_NUMBER',
        'updateBlockStatus',
        'sender',
        'sendPresenceUpdate',
        'unavailable',
        'slice',
        'message',
        'default',
        '221268ranFuu',
        'AUTO_TYPING',
        'user',
        'participants',
        'decodeJid',
        'push',
        'key',
        'join',
        '8448200gkiHIl',
        'endsWith',
        'split',
        'available',
        'body',
        '212',
        'admin',
        'readMessages',
        'superadmin',
        'file://',
        '12278403fAwcfW',
        'log',
        '.js'
    ];
    _0x28d7 = function () {
        return _0x3ef307;
    };
    return _0x28d7();
}
import { smsg } from '../../star_king/alyad.cjs';
import { handleAntilink } from './alyake.js';
import { fileURLToPath } from 'url';
const __filename = fileURLToPath(import.meta[_0x31696c(0x1e2)]), __dirname = _0xf0f06d['dirname'](__filename);
export const getGroupAdmins = _0x1b5ff4 => {
    const _0x397b6b = _0x31696c;
    let _0x350c3a = [];
    for (let _0x42436e of _0x1b5ff4) {
        (_0x42436e[_0x397b6b(0x1c3)] === _0x397b6b(0x1c5) || _0x42436e[_0x397b6b(0x1c3)] === 'admin') && _0x350c3a[_0x397b6b(0x1ba)](_0x42436e['id']);
    }
    return _0x350c3a || [];
};
const Handler = async (_0x5bc79e, _0x40d1a5, _0x354558) => {
    const _0xab2a4d = _0x31696c;
    try {
        if (_0x5bc79e[_0xab2a4d(0x1e4)] !== _0xab2a4d(0x1d6))
            return;
        const _0x1f1671 = serialize(JSON[_0xab2a4d(0x1e1)](JSON['stringify'](_0x5bc79e[_0xab2a4d(0x1e7)][0x0])), _0x40d1a5, _0x354558);
        if (!_0x1f1671[_0xab2a4d(0x1f3)])
            return;
        const _0x55a243 = _0x1f1671[_0xab2a4d(0x1cd)] ? await _0x40d1a5[_0xab2a4d(0x1ca)](_0x1f1671[_0xab2a4d(0x1d9)])[_0xab2a4d(0x1cc)](_0x5ccd62 => _0x5ccd62[_0xab2a4d(0x1b8)]) : [], _0xe346c8 = _0x1f1671[_0xab2a4d(0x1cd)] ? getGroupAdmins(_0x55a243) : [], _0x2ca5b7 = _0x40d1a5[_0xab2a4d(0x1b7)]['id']['split'](':')[0x0] + '@s.whatsapp.net', _0x586db7 = _0x1f1671[_0xab2a4d(0x1cd)] ? _0xe346c8[_0xab2a4d(0x1d3)](_0x2ca5b7) : ![], _0x5ca6c0 = _0x1f1671[_0xab2a4d(0x1cd)] ? _0xe346c8[_0xab2a4d(0x1d3)](_0x1f1671['sender']) : ![], _0x1c2f59 = /^[\\/!#.]/, _0x4be10b = _0x43f53f => _0x1c2f59['test'](_0x43f53f), _0x119b47 = _0x4be10b(_0x1f1671[_0xab2a4d(0x1c1)]) ? _0x1f1671[_0xab2a4d(0x1c1)][_0xab2a4d(0x1e0)](_0x1c2f59) : null, _0x3ea66d = _0x119b47 ? _0x119b47[0x0] : '/', _0x1a070e = _0x1f1671[_0xab2a4d(0x1c1)][_0xab2a4d(0x1e9)](_0x3ea66d) ? _0x1f1671[_0xab2a4d(0x1c1)][_0xab2a4d(0x1f2)](_0x3ea66d[_0xab2a4d(0x1db)])[_0xab2a4d(0x1bf)]('\x20')[0x0][_0xab2a4d(0x1e5)]() : '', _0x4ccbc8 = _0x1f1671['body']['slice'](_0x3ea66d['length'] + _0x1a070e['length'])[_0xab2a4d(0x1d2)]();
        _0x1f1671[_0xab2a4d(0x1bb)] && _0x1f1671[_0xab2a4d(0x1bb)][_0xab2a4d(0x1eb)] === _0xab2a4d(0x1e3) && _0x17c107[_0xab2a4d(0x1dd)] && await _0x40d1a5[_0xab2a4d(0x1c4)]([_0x1f1671[_0xab2a4d(0x1bb)]]);
        _0x1f1671[_0xab2a4d(0x1bb)] && _0x1f1671[_0xab2a4d(0x1d9)] && (_0x17c107[_0xab2a4d(0x1b6)] && await _0x40d1a5[_0xab2a4d(0x1f0)]('composing', _0x1f1671[_0xab2a4d(0x1d9)], [_0x1f1671['key']]), _0x17c107['AUTO_RECORDING'] && await _0x40d1a5[_0xab2a4d(0x1f0)](_0xab2a4d(0x1d8), _0x1f1671[_0xab2a4d(0x1d9)], [_0x1f1671['key']]), _0x17c107[_0xab2a4d(0x1da)] ? await _0x40d1a5['sendPresenceUpdate'](_0xab2a4d(0x1c0), _0x1f1671['from'], [_0x1f1671['key']]) : await _0x40d1a5[_0xab2a4d(0x1f0)](_0xab2a4d(0x1f1), _0x1f1671[_0xab2a4d(0x1d9)], [_0x1f1671['key']]), _0x17c107[_0xab2a4d(0x1ce)] && await _0x40d1a5['readMessages']([_0x1f1671[_0xab2a4d(0x1bb)]]), _0x17c107['AUTO_BLOCK'] && _0x1f1671[_0xab2a4d(0x1ef)][_0xab2a4d(0x1e9)](_0xab2a4d(0x1c2)) && await _0x40d1a5[_0xab2a4d(0x1ee)](_0x1f1671['sender'], _0xab2a4d(0x1de)));
        const _0x1ddba6 = await _0x40d1a5[_0xab2a4d(0x1b9)](_0x40d1a5[_0xab2a4d(0x1b7)]['id']), _0x53e097 = _0x17c107[_0xab2a4d(0x1ed)] + _0xab2a4d(0x1d0);
        let _0x1676d2 = ![];
        _0x1f1671[_0xab2a4d(0x1cd)] ? _0x1676d2 = _0x1f1671[_0xab2a4d(0x1ef)] === _0x53e097 || _0x1f1671['sender'] === _0x1ddba6 : _0x1676d2 = _0x1f1671[_0xab2a4d(0x1ef)] === _0x53e097 || _0x1f1671[_0xab2a4d(0x1ef)] === _0x1ddba6;
        if (!_0x40d1a5[_0xab2a4d(0x1cb)]) {
            if (!_0x1676d2)
                return;
        }
        await handleAntilink(_0x1f1671, _0x40d1a5, _0x354558, _0x586db7, _0x5ca6c0, _0x1676d2);
        const {
            isGroup: _0x27680d,
            type: _0x297983,
            sender: _0x5c4467,
            from: _0x5fd602,
            body: _0x28c023
        } = _0x1f1671;
        console[_0xab2a4d(0x1c8)](_0x1f1671);
        const _0x45237d = _0xf0f06d[_0xab2a4d(0x1bc)](__dirname, '..', _0xab2a4d(0x1e8)), _0x1783b1 = await _0x2bad9d[_0xab2a4d(0x1df)](_0x45237d);
        for (const _0x39c386 of _0x1783b1) {
            if (_0x39c386[_0xab2a4d(0x1be)](_0xab2a4d(0x1c9))) {
                const _0x343d19 = _0xf0f06d[_0xab2a4d(0x1bc)](_0x45237d, _0x39c386);
                try {
                    const _0x5b4dd5 = await import(_0xab2a4d(0x1c6) + _0x343d19), _0x4c9fd8 = _0x5b4dd5[_0xab2a4d(0x1f4)];
                    await _0x4c9fd8(_0x1f1671, _0x40d1a5);
                } catch (_0x15d91b) {
                    console[_0xab2a4d(0x1e6)](_0xab2a4d(0x1ec) + _0x343d19, _0x15d91b);
                }
            }
        }
    } catch (_0x3799f6) {
        console['log'](_0x3799f6);
    }
};
export default Handler;
